{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanmaytatyasosamjanawar/Desktop/Projects/Quiz-App/quiz-app/frontend/src/utils/constant.js"],"sourcesContent":["export const BASE_URL = \"http://localhost:8000\";\n"],"names":[],"mappings":";;;AAAO,MAAM,WAAW","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanmaytatyasosamjanawar/Desktop/Projects/Quiz-App/quiz-app/frontend/src/app/questions/%5Bid%5D/page.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { BASE_URL } from \"@/utils/constant\";\n\nconst QuestionPage = () => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  const [questions, setQuestions] = useState([]);\n  const [newQuestion, setNewQuestion] = useState(\"\");\n  const [newOptions, setNewOptions] = useState([\n    { text: \"\", isCorrect: false },\n    { text: \"\", isCorrect: false },\n    { text: \"\", isCorrect: false },\n    { text: \"\", isCorrect: false },\n  ]);\n  const [load, setLoad] = useState(false);\n\n  // Replace your Redux user selector with a simple user state or prop\n  // For demonstration, assuming user role \"admin\" (replace with your auth logic)\n  const user = { role: \"admin\" };\n  const isAdmin = user?.role === \"admin\";\n\n  useEffect(() => {\n    if (!id) return; // wait for id to be available\n\n    const fetchQuestions = async () => {\n      try {\n        const res = await axios.get(`${BASE_URL}/allquestions/${id}`, {\n          withCredentials: true,\n        });\n        if (Array.isArray(res.data)) {\n          setQuestions(res.data);\n        } else {\n          setQuestions([]);\n          console.error(\"Invalid response format, expected array:\", res.data);\n        }\n      } catch (error) {\n        setQuestions([]);\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n\n    fetchQuestions();\n  }, [id, load]);\n\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...newOptions];\n    updatedOptions[index].text = value;\n    setNewOptions(updatedOptions);\n  };\n\n  const handleCorrectOptionChange = (index) => {\n    const updatedOptions = newOptions.map((opt, i) => ({\n      ...opt,\n      isCorrect: i === index,\n    }));\n    setNewOptions(updatedOptions);\n  };\n\n  const handleAddQuestion = async () => {\n    if (!newQuestion.trim() || newOptions.some((opt) => !opt.text.trim())) {\n      alert(\"Please enter a question and all 4 options.\");\n      return;\n    }\n    try {\n      const res = await axios.post(\n        `${BASE_URL}/addquestion/${id}`,\n        {\n          questionText: newQuestion,\n          options: newOptions,\n        },\n        { withCredentials: true }\n      );\n\n      if (res.data && res.data.questionText) {\n        setLoad(!load);\n        setQuestions((prev) => [...prev, res.data]);\n        setNewQuestion(\"\");\n        setNewOptions([\n          { text: \"\", isCorrect: false },\n          { text: \"\", isCorrect: false },\n          { text: \"\", isCorrect: false },\n          { text: \"\", isCorrect: false },\n        ]);\n      } else {\n        console.error(\"Invalid response data:\", res.data);\n      }\n    } catch (error) {\n      console.error(\"Error adding question:\", error);\n    }\n  };\n\n  const handleDeleteQuiz = async () => {\n    try {\n      const res = await axios.delete(`${BASE_URL}/deletequiz/${id}`, {\n        withCredentials: true,\n      });\n      if (res) {\n        router.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting quiz:\", error);\n    }\n  };\n\n  const handleDeleteQuestion = async (questionId) => {\n    try {\n      const res = await axios.delete(\n        `${BASE_URL}/deletequestion/${questionId}`,\n        { withCredentials: true }\n      );\n      if (res) {\n        setLoad(!load);\n      }\n    } catch (error) {\n      console.error(\"Error deleting question:\", error);\n    }\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-6 bg-white border border-gray-200 rounded-lg shadow-md\">\n      {questions?.length > 0 ? (\n        <h5 className=\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-gray\">\n          Quiz Name - {questions[0].quizId?.title || \"No Title Available\"}\n        </h5>\n      ) : (\n        \"No Title Available\"\n      )}\n\n      <div className=\"flex justify-end\">\n        <button\n          type=\"button\"\n          onClick={handleDeleteQuiz}\n          className=\"text-white bg-red-700 hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\"\n        >\n          Delete Quiz\n        </button>\n      </div>\n\n      {isAdmin && (\n        <div className=\"mb-6 p-4 bg-gray-100 border rounded-lg\">\n          <h2 className=\"text-lg font-semibold mb-2\">Add New Question</h2>\n\n          <input\n            type=\"text\"\n            className=\"w-full p-2 border rounded-md mb-3\"\n            placeholder=\"Enter new question\"\n            value={newQuestion}\n            onChange={(e) => setNewQuestion(e.target.value)}\n          />\n\n          {newOptions.map((option, index) => (\n            <div key={index} className=\"flex gap-2 mb-2\">\n              <input\n                type=\"text\"\n                className=\"w-full p-2 border rounded-md\"\n                placeholder={`Option ${index + 1}`}\n                value={option.text}\n                onChange={(e) => handleOptionChange(index, e.target.value)}\n              />\n              <input\n                type=\"radio\"\n                name=\"correctOption\"\n                className=\"w-5 h-5\"\n                checked={option.isCorrect}\n                onChange={() => handleCorrectOptionChange(index)}\n              />\n            </div>\n          ))}\n\n          <button\n            className=\"px-4 py-2 text-white bg-green-500 rounded hover:bg-green-600 mt-2\"\n            onClick={handleAddQuestion}\n          >\n            Add Question with Options\n          </button>\n        </div>\n      )}\n\n      {Array.isArray(questions) && questions.length > 0 ? (\n        questions.map((question, qIndex) => (\n          <div\n            key={question._id || qIndex}\n            className=\"mb-6 p-4 border rounded-lg bg-gray-50\"\n          >\n            <div className=\"flex justify-end\">\n              <button\n                type=\"button\"\n                onClick={() => handleDeleteQuestion(question._id)}\n                className=\"text-white bg-red-700 hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\"\n              >\n                Delete Question\n              </button>\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">\n              {question.questionText}\n            </h2>\n            {Array.isArray(question.options) &&\n              question.options.map((option, oIndex) => (\n                <div\n                  key={oIndex}\n                  className=\"flex items-center justify-between p-3 border rounded-lg\"\n                >\n                  <span className=\"text-gray-900\">{option.text}</span>\n                  {option.isCorrect && (\n                    <span className=\"text-green-600 font-bold\">âœ” Correct</span>\n                  )}\n                </div>\n              ))}\n          </div>\n        ))\n      ) : (\n        <p>No questions available. Add a new question!</p>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}